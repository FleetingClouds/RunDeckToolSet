- id: net.fleetingclouds.initial.prepHost
  project: PrepareGenericVPS
  loglevel: INFO
  sequence:
    keepgoing: false
    strategy: node-first
    commands:
    - exec: echo " . . . .  . . . .  . . . . Run First Step  . . . .  . . . .  . . . .  . . . . "
    - jobref:
        group: net/fleetingclouds/initial
        name: Push RunDeck public key to host
        args: -FingerPrint ${option.FingerPrint} -Host ${option.Host} -Password ${option.Password} -User ${option.User}
    - exec: echo " . . . .  . . . .  . . . . Run Second Step  . . . .  . . . .  . . . .  . . . . "
    - jobref:
        group: net/fleetingclouds/initial
        name: CreateAdminUsers
        args: -Host ${option.Host} -User ${option.User}
    - exec: echo " . . . .  . . . .  . . . . Finished  . . . .  . . . .  . . . .  . . . . "
    - script: |-
        cat > ./fixSSH.sh <<-EOF
        declare HOST=@option.Host@
        echo \$HOST 
        declare IP_ADDR=\`echo \$HOST | nslookup | grep Address | sed '1,1d' | sed s/Address://g\`
        echo \$IP_ADDR
        ssh-keygen -R \$IP_ADDR
        ssh-keygen -R \$HOST

        declare CONFIRM="Are you sure you want to continue connecting (yes/no)?"
        declare AUTHENTICATE="(current) UNIX password:"
        declare FIRST_PASS_PROMPT="Enter new UNIX password:"
        declare SECOND_PROMPT="Retype new UNIX password:"
        declare NEW_PASS="@option.NewPass@"

        expect -c "spawn ssh \$HOST  ; set timeout 60 ; expect -re \\"\${CONFIRM}\\" ; sleep 20 ; send yes\n ; expect -re \\"\${AUTHENTICATE}\\"  ; sleep 20 ; send okokok\n ; expect -re \\"\${FIRST_PASS_PROMPT}\\"  ; sleep 20 ; send \${NEW_PASS}\n ; expect -re \\"\${SECOND_PROMPT}\\"  ; sleep 20 ; send \${NEW_PASS}\n ; interact "

        EOF

        chmod a+x fixSSH.sh

        echo "*******************************************************************"  
        echo "****"  
        echo "**** A script to update SSH recognition AND password on the "  
        echo "**** host $RD_OPTION_HOST has been written *locally* as "  
        echo -n "****      " && echo -n `pwd` && echo "/fixSSH.sh "  
        echo "****"  
        echo "*******************************************************************"
    - script: |
        echo "*******************************************************************"
        echo "****"
        echo "**** You must now connect, as the *rundeck* user, to $RD_OPTION_HOST "
        echo "**** in order to change the password 'okokok' to a real one. "
        echo "****"
        echo "**** Use :"
        echo "****   - sudo -sHu rundeck"
        echo "****   - ssh $RD_OPTION_HOST"
        echo "****"
        echo "*******************************************************************"
  description: |
    Calls Steps One & Two
    
    To determine the default Fingerprint for the remote machine, simply attempt an SSH connection to it.  It will report an unknown host, and display its fingerprint-
    
  name: PrepareHost
  uuid: net.fleetingclouds.initial.prepHost
  group: net/fleetingclouds/initial
  options:
    FingerPrint:
      required: true
      description: This is the SSH fingerprint that RunDeck must expect for all future connections to the indicated host.
      value: 63:e3:89:be:96:00:b9:2e:eb:cb:0f:2c:21:27:48:f7
    Host:
      required: true
      description: This is a host that RunDeck will be accessing in the future.
      value: cgf.justtrade.net
    Password:
      required: true
      description: This is the root password for the indicated host.  It should be used just this one time, and never again.
      value: 3roocE7hu5R80psvWMsN
    User:
      required: true
      description: 'The user authorized to do this : ${option.User}'
      value: root
