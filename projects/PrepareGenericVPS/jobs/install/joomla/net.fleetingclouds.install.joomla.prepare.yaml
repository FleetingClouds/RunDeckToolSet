- id: net.fleetingclouds.install.joomla.prepare
  project: PrepareGenericVPS
  loglevel: INFO
  sequence:
    keepgoing: false
    strategy: node-first
    commands:
    - exec: echo " Start - - - "
    - exec: 'echo " ####################  Calling [JoomlaConf] ############### ####
        "  ${option.MySqlJoomlaPwd}'
    - jobref:
        group: net/fleetingclouds/install/joomla
        name: JoomlaConf
        args: -MySqlJoomlaPwd ${option.MySqlJoomlaPwd} -JoomlaTblPrefix ${option.JoomlaTblPrefix} -Host ${option.Host} -Port ${option.Port}
    - script: |-
        #!/bin/bash
        #
        mkdir -p  @option.InstallersRepository@
        pushd  @option.InstallersRepository@
        echo "Stepping into ..."
        pwd
        #
        echo "Getting compress'd source ... @option.InstallerURL@/Joomla_@option.InstallerVersion@.tar.bz2"
        wget -nc -c @option.InstallerURL@/Joomla_@option.InstallerVersion@.tar.bz2 2> /dev/null 
        popd
        #
        #
        rm -f tmp.sh
        #
        cat > tmp.sh <<EOF
        #!/bin/bash  
        #
            mkdir -p @option.BuildDirectory@
            #
            cd @option.BuildDirectory@
            echo "Stepping into ..."
            pwd
            #
            # 
            echo "Unzip the downloaded file" 
            tar xvfj @option.InstallersRepository@/Joomla_@option.InstallerVersion@.tar.bz2
            #
            echo "Remove Apache's default index.html"
            if [ -e index.html ]; then sudo mv index.html apache_hello.html; fi
            #
            echo ". . . . . . Step into @option.BuildDirectory@ >>>>>"
            pushd @option.BuildDirectory@
              #
              echo ">>  Remove Joomla's installation directory"
              mkdir -p /usr/local/src/joomla/
              if [ -e installation ]; then
                rm -fr /usr/local/src/joomla/installation
                mv installation /usr/local/src/joomla/
              fi
              #
              echo "Provide Joomla with a configuration file"
              if [ ! -e configuration.php ]; then cp $HOME/configuration.php .; fi
              #
              echo "Make it all property of www-data and allow group writes"
              chown -R www-data:www-data *
              chmod -R g+w *
              #
            echo ". . . . . . Step out of @option.BuildDirectory@ <<<<<"
            popd
            #
        #
        EOF
        #
        chmod a+x tmp.sh
    - exec: sudo ./tmp.sh
    - exec: sudo apt-get -y install patch
    - script: |
        cat > default.patchAO <<EOFDAO
        --- default.orig 2012-08-08 20:57:34.000000000 +0400
        +++ default      2012-08-08 20:58:01.000000000 +0400
        @@ -8,7 +8,7 @@
         	</Directory>
         	<Directory /var/www/>
         		Options Indexes FollowSymLinks MultiViews
        -		AllowOverride None
        +		AllowOverride All
         		Order allow,deny
         		allow from all
         	</Directory>
        EOFDAO
    - script: |
        cat > apache2.conf.patchAO <<EOFAPC
        --- apache2.conf.orig 2012-08-08 17:50:50.000000000 +0400
        +++ apache2.conf      2012-08-08 17:51:27.000000000 +0400
        @@ -152,6 +152,14 @@
         
         AccessFileName .htaccess
         
        +<Directory />
        +    AllowOverride None
        +</Directory>
        +
        +<Directory /var/www>
        +    AllowOverride All
        +</Directory>
        +
         #
         # The following lines prevent .htaccess and .htpasswd files from being 
         # viewed by Web clients.
        EOFAPC
    - exec: echo "Prepare apache2.conf and default AllowOverride patches ................................................."
    - script: |-
        #!/bin/bash
        #
        rm -f tmp.sh
        #
        cat > tmp.sh <<EOF
        #!/bin/bash  
        #
        cd /etc/apache2
        #
        echo " - - trying to patch now - - "
        declare PATCH_IT1=\$(cat apache2.conf | grep -c "AllowOverride All")
        [  1 -gt \$PATCH_IT1  ]   &&   patch <~/apache2.conf.patchAO
        #
        cd /etc/apache2/sites-available
        declare PATCH_IT2=\$(cat default | grep -c "AllowOverride All")
        [  1 -gt \$PATCH_IT2  ]   &&   patch <~/default.patchAO
        #
        cd /etc/apache2/mods-enabled/
        ln -s ../mods-available/rewrite.load rewrite.load
        #
        exit 0;
        #
        EOF
        #
        chmod a+x tmp.sh
    - exec: echo "Patch apache2.conf  and default AllowOverride ................................................."
    - exec: sudo ./tmp.sh
    - script: |-
        #!/bin/bash
        #
        rm -f tmpAO.sh
        #
        cat > tmpAO.sh <<EOF
        #!/bin/bash  
        #
        cd @option.BuildDirectory@
        #
        rm -f .htaccess
        cp htaccess.txt .htaccess
        sudo chown -R www-data:www-data .htaccess
        sudo chmod 755 .htaccess
        sudo chown -R www-data:www-data *
        sudo chmod 755 *
        EOF
        #
        chmod a+x tmpAO.sh
    - exec: echo "Enable Joomlas htaccess file ................................................."
    - exec: sudo ./tmpAO.sh
    - exec: echo "Restart Apache"
    - exec: sudo /etc/init.d/apache2 restart
    - exec: echo " - - - End."
  description: ''
  name: PrepareJoomla
  uuid: net.fleetingclouds.install.joomla.prepare
  nodefilters:
    dispatch:
      threadcount: 1
      keepgoing: false
      excludePrecedence: true
      rankOrder: ascending
    include:
      name: curr.*
  group: net/fleetingclouds/install/joomla
  options:
    BuildDirectory:
      enforced: true
      required: true
      description: Where programs are built.
      values:
      - /usr/local/apache/htdocs
      - /var/www
    Host:
      enforced: true
      required: true
      description: the host where the file should go
      valuesUrl: http://openerpns.warehouseman.com/downloads/rundeck/resources/meta.fleetingclouds.net/nodeNames.json
    InstallerURL:
      required: true
      value: http://joomlacode.org/gf/download/frsrelease/17173/74756
    InstallerVersion:
      required: true
      value: 2.5.6-Stable-Full_Package
    InstallersRepository:
      required: true
      value: ~/installers
    JoomlaTblPrefix:
      required: true
      description: The table identifier that permits muliple sites to use one database.
      value: mol01_
    MySqlJoomlaPwd:
      required: true
      description: Joomla user password.
      secure: true
      valueExposed: true
    Port:
      enforced: true
      required: true
      description: The remote port to connect to.
      values:
      - '22'
      - '7822'
    sudoPwdRunDeck:
      required: true
      description: RunDeck's password
      secure: true
