- id: net.fleetingclouds.test.phpextension
  project: PrepareGenericVPS
  loglevel: INFO
  sequence:
    keepgoing: false
    strategy: node-first
    commands:
    - exec: echo "... Start rebuilding Open Transaction PHP extension"
    - exec: mkdir -p ~/projects
    - script: |-
        #! /bin/bash
        #
        echo " - - - - - - - - - - - Preparing temporary script file tmp.sh in directory ..." 
        pwd 
        # 
        rm -fr tmp.sh 
        cat > tmp.sh <<EOF 
        #! /bin/bash  
        #
        aptitude install -y git-core
        #
        echo "   - -   PATH is " $PATH
        # 
        pushd ~/projects
        if [ -d "OT_PHP_Ext" ]; then
            echo "Already cloned, so pull."
            pushd OT_PHP_Ext
            git pull
        else
            echo "First run, so clone."
            git clone git://github.com/FleetingClouds/OT_PHP_Ext.git
            pushd OT_PHP_Ext
        fi
        #
        /usr/local/php5/bin/phpize
        #
        ./configure --with-php-config=/usr/local/php5/bin/php-config
        #
        make
        #
        make install
        #
        popd
        #
        chown -R rundeck:rundeck OT_PHP_Ext
        chmod -R ug+rw OT_PHP_Ext
        #
        if [ -d "rlyeh" ]; then
            echo "Already cloned, so pull."
            pushd rlyeh
            git pull
        else
            echo "First run, so clone."
            git clone git://github.com/kchodorow/rlyeh.git
            pushd rlyeh
        fi
        #
        /usr/local/php5/bin/phpize
        #
        ./configure --with-php-config=/usr/local/php5/bin/php-config
        #
        make
        #
        make install
        #
        popd
        #
        chown -R rundeck:rundeck rlyeh
        chmod -R ug+rw rlyeh
        #
        popd 

        # 
        echo " - - - - - - - - - - - Step into /usr/local/php5/lib >>>>>"  
        pushd /usr/local/php5/lib
        pwd
        #
        if [  1 -gt  \$(cat php.ini | grep -c "@option.SharedObjectName@") ]; then


        cat > php.ini-otapi_ext.patch <<EOPF
        --- php.ini     2012-07-23 18:28:35.000000000 +0400
        +++ php.ini.new 2012-07-23 23:44:52.000000000 +0400
        @@ -839,4 +839,6 @@
         ;;;;;;;;;;;;;;;;;;;;;;
         ; Dynamic Extensions ;
         ;;;;;;;;;;;;;;;;;;;;;;

        +extension=rlyeh.so
        +extension=@option.SharedObjectName@
        EOPF



            #
            echo ">>  - - - - - - - - - - - Patch the php.ini file ..."
            [ -f php.ini.orig ] && cp php.ini.orig php.ini.orig_bk
            [ -f php.ini ] && cp php.ini php.ini.orig
            patch  --fuzz=5 < php.ini-otapi_ext.patch
        else
            echo "* * * * will not patch the php.ini file a second time.  * * * "
        fi
        # 
        echo ">> - - - - - - - - - - - Step out of /usr/local/php5/lib <<<<<"  
        popd
        # 
        echo " - - - - - - - - - - - Restart fastcgi and nginx"
        /etc/init.d/php-fastcgi restart && /etc/init.d/nginx restart
        #
        echo " - - - - - - - - - - - tmp script has been executed." 
        EOF
        # 
        chmod a+x tmp.sh
    - exec: sudo ./tmp.sh
    - script: |
        #!/bin/bash
        #
        echo "Command line execution results are : "
        php -r 'otapi_GetTime(true);'
        php -r 'otapi_GetTime(false);'
        #
    - exec: echo "... Finished rebuilding Open Transaction PHP extension"
  description: This build and tests the creation of two PHP extensions as shared objects.
  name: TestPhpExtension
  uuid: net.fleetingclouds.test.phpextension
  nodefilters:
    dispatch:
      threadcount: 1
      keepgoing: false
      excludePrecedence: true
      rankOrder: ascending
    include:
      name: curr.*
  group: net/fleetingclouds/test
  options:
    SharedObjectName:
      required: true
      description: The file name of the object library
      value: otapi_php.so
    sudoPwdRunDeck:
      required: true
      value: okmmpl,,
      secure: true
